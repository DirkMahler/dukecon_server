<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.dukecon</groupId>
        <artifactId>dukecon-server</artifactId>
        <version>1.2.0-SNAPSHOT</version>
    </parent>

    <artifactId>dukecon-server-springboot</artifactId>
    <packaging>war</packaging>

    <name>DukeCon Server Implementation</name>

    <properties>
        <start-class>org.dukecon.DukeConServerApplication</start-class>

        <java.version>1.7</java.version>
        <keycloak.version>1.7.0.Final</keycloak.version>
        <groovy.version>2.4.3</groovy.version>
        <spock.version>1.0-groovy-2.4</spock.version>

        <surefire.argline />
		<jgiven.version>0.11.0</jgiven.version>
        <arquillian.config>arquillian-headless.xml</arquillian.config>
    </properties>

	<dependencyManagement>
    <dependencies>
        <dependency>
				<groupId>org.jboss.arquillian</groupId>
				<artifactId>arquillian-bom</artifactId>
				<version>1.1.5.Final</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.arquillian.extension</groupId>
				<artifactId>arquillian-drone-bom</artifactId>
				<version>1.3.1.Final</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.arquillian.selenium</groupId>
				<artifactId>selenium-bom</artifactId>
				<version>2.48.2</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
            <groupId>org.dukecon</groupId>
            <artifactId>dukecon-server-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.dukecon</groupId>
            <artifactId>dukecon-html5-client</artifactId>
            <version>1.2.0-SNAPSHOT</version>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jersey</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
        </dependency>
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-spring-boot-adapter</artifactId>
            <version>${keycloak.version}</version>
        </dependency>
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-tomcat8-adapter</artifactId>
            <version>${keycloak.version}</version>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
        <!-- upgrade archaius-core to avoid NoClassDefFoundError exception -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-hystrix</artifactId>
            <version>1.0.4.RELEASE</version>
            <exclusions>
                <exclusion>
                    <groupId>com.netflix.archaius</groupId>
                    <artifactId>archaius-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.netflix.archaius</groupId>
            <artifactId>archaius-core</artifactId>
            <version>0.7.1</version>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>9.4-1201-jdbc41</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-spring</artifactId>
            <scope>test</scope>
        </dependency>
        <!--
            Disabled for now ... no need to force you to require Flex & Flash stuff :-)
        -->
        <!--dependency>
            <groupId>org.dukecon</groupId>
            <artifactId>dukecon-flex-core</artifactId>
            <version>1.1.0-SNAPSHOT</version>
            <type>swf</type>
        </dependency-->
		<dependency>
			<groupId>org.jboss.arquillian.graphene</groupId>
			<artifactId>graphene-webdriver</artifactId>
			<version>2.0.3.Final</version>
			<type>pom</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-standalone</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.extension</groupId>
			<artifactId>arquillian-phantom-binary</artifactId>
			<version>1.9.7</version>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-firefox-driver</artifactId>
            <version>2.48.2</version>
        </dependency>
		<dependency>
			<groupId>xml-apis</groupId>
			<artifactId>xml-apis</artifactId>
			<version>1.4.01</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.tngtech.jgiven</groupId>
			<artifactId>jgiven-junit</artifactId>
			<version>${jgiven.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.1.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>Unix Profile</id>
            <activation>
                <file>
                    <exists>/dev/urandom</exists>
                </file>
            </activation>
            <properties>
                <surefire.argline>-Djava.security.egd=file:/dev/./urandom</surefire.argline>
            </properties>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <compilerId>groovy-eclipse-compiler</compilerId>
                    <fork>true</fork>
                    <compilerArguments>
                        <javaAgentClass>lombok.launch.Agent</javaAgentClass>
                    </compilerArguments>
                </configuration>
                <dependencies>
                    <dependency>
                       <groupId>org.codehaus.groovy</groupId>
                       <artifactId>groovy-eclipse-compiler</artifactId>
                       <version>2.9.2-01</version>
                    </dependency>
                    <dependency>
                       <groupId>org.codehaus.groovy</groupId>
                       <artifactId>groovy-eclipse-batch</artifactId>
                       <version>2.4.3-01</version>
                    </dependency>
                    <dependency>
                        <groupId>org.projectlombok</groupId>
                        <artifactId>lombok</artifactId>
                        <version>${lombok.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-eclipse-compiler</artifactId>
                <version>2.9.2-01</version>
                <extensions>true</extensions>
            </plugin>
			<!-- copy the html5 war file to the target folder so surefire can pick it up -->
            <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.10</version>
				<executions>
					<execution>
						<id>copy</id>
						<phase>compile</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.dukecon</groupId>
									<artifactId>dukecon-html5-client</artifactId>
									<type>war</type>
									<overWrite>true</overWrite>
								</artifactItem>
							</artifactItems>
							<stripVersion>true</stripVersion>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>${surefire.argline}</argLine>
                    <useFile>false</useFile>
					<additionalClasspathElements>
						<!-- this is necessary so Spring boot picks up the static content in /public that is used by the GUI test -->
						<additionalClasspathElement>${project.build.directory}/dependency/dukecon-html5-client.war</additionalClasspathElement>
					</additionalClasspathElements>
                    <includes>
                        <include>**/*Spec.java</include>
                        <include>**/*Spec.groovy</include>
                        <include>**/*Test*.java</include>
                        <include>**/*Test*.groovy</include>
                    </includes>
					<systemProperties>
						<!-- when you run the tests in the IDE, arquillian.xml is used
						with a firefox browser served by a remote selenium. -->
						<!-- when you run the tests from maven, use the arquillian-headless.xml
						instead that uses a phantom headless browser -->
						<property>
							<name>arquillian.xml</name>
							<value>${arquillian.config}</value>
						</property>
					</systemProperties>
                </configuration>
            </plugin>
            <!--
            <plugin>
                <groupId>com.sebastian-daschner</groupId>
                <artifactId>jaxrs-analyzer-maven-plugin</artifactId>
                <version>0.6</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>analyze-jaxrs</goal>
                        </goals>
                        <configuration>
                            <backend>swagger</backend>
                            <buildDirectory>${basedir}/../api/target</buildDirectory>
                            <deployedDomain>dukecon.org</deployedDomain>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            -->
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>3.2.1</version>
            </plugin>
			<plugin>
				<groupId>com.tngtech.jgiven</groupId>
				<artifactId>jgiven-maven-plugin
				</artifactId>
				<version>${jgiven.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<format>html5</format>
				</configuration>
			</plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            com.sebastian-daschner
                                        </groupId>
                                        <artifactId>
                                            jaxrs-analyzer-maven-plugin
                                        </artifactId>
                                        <versionRange>
                                            [0.3,)
                                        </versionRange>
                                        <goals>
                                            <goal>analyze-jaxrs</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>